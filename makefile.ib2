# Makefile for the SPD stuff - based on the Zortech compiler for IBM clones,
# modify to support whatever compiler you have.
CC	=ztc
#
#CFLAGS	=-mx
CFLAGS	=-ml -f
OBJ	= obj
SPDOBJS	= drv_zrtc.$(OBJ) libini$(OBJ) libinf$(OBJ) libpr1$(OBJ) libpr2$(OBJ) libpr3$(OBJ) libply$(OBJ) libdmp$(OBJ) libvec$(OBJ) libvec.$(OBJ)

# Zortech specific graphics library
LIBFILES=fg.lib
#LIBFILES=fgp.lib

# Rule to compile c progs into obj's
.c.$(OBJ):
	$(CC) $(CFLAGS) -c $<

drv_zrtc.$(OBJ): drv_zrtc.c drv.h def.h

libini.$(OBJ): libini.c lib.h libvec.h drv.h

libinf.$(OBJ): libinf.c lib.h libvec.h drv.h

libpr1.$(OBJ): libpr1.c lib.h libvec.h drv.h

libpr2.$(OBJ): libpr2.c lib.h libvec.h drv.h

libpr3.$(OBJ): libpr3.c lib.h libvec.h drv.h

libply.$(OBJ): libply.c lib.h libvec.h drv.h

libdmp.$(OBJ): libdmp.c lib.h libvec.h drv.h

libvec.$(OBJ): libvec.c libvec.h

balls.exe: balls.$(OBJ) $(SPDOBJS)
   $(CC) $(CFLAGS) balls.$(OBJ) $(SPDOBJS) $(LIBFILES)

gears.exe: gears.$(OBJ) $(SPDOBJS)
   $(CC) $(CFLAGS) gears.$(OBJ) $(SPDOBJS) $(LIBFILES)

mount.exe: mount.$(OBJ) $(SPDOBJS)
   $(CC) $(CFLAGS) mount.$(OBJ) $(SPDOBJS) $(LIBFILES)

rings.exe: rings.$(OBJ) $(SPDOBJS)
   $(CC) $(CFLAGS) rings.$(OBJ) $(SPDOBJS) $(LIBFILES)

teapot.exe: teapot.$(OBJ) $(SPDOBJS)
   $(CC) $(CFLAGS) teapot.$(OBJ) $(SPDOBJS) $(LIBFILES)

tetra.exe: tetra.$(OBJ) $(SPDOBJS)
   $(CC) $(CFLAGS) tetra.$(OBJ) $(SPDOBJS) $(LIBFILES)

tree.exe: tree.$(OBJ) $(SPDOBJS)
   $(CC) $(CFLAGS) tree.$(OBJ) $(SPDOBJS) $(LIBFILES)

readdxf.exe: readdxf.$(OBJ) $(SPDOBJS)
   $(CC) $(CFLAGS) readdxf.$(OBJ) $(SPDOBJS) $(LIBFILES)

readnff.exe: readnff.$(OBJ) $(SPDOBJS)
   $(CC) $(CFLAGS) readnff.$(OBJ) $(SPDOBJS) $(LIBFILES)

sample.exe: sample.$(OBJ) $(SPDOBJS)
   $(CC) $(CFLAGS) sample.$(OBJ) $(SPDOBJS) $(LIBFILES)

lattice.exe: lattice.$(OBJ) $(SPDOBJS)
   $(CC) $(CFLAGS) lattice.$(OBJ) $(SPDOBJS) $(LIBFILES)

shells.exe: shells.$(OBJ) $(SPDOBJS)
   $(CC) $(CFLAGS) shells.$(OBJ) $(SPDOBJS) $(LIBFILES)
